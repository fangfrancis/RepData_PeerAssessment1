X
X <- X[sample(1:5),]
X
X <- X[sample(1:5),]
X
X
X <- X[sample(1:5),]
X
?which
source('~/test.R')
source('~/test.R')
htmlCode
source('~/oauth-twitter.R')
?par
data <- read.table("~/household_power_consumption.txt", sep = ";", header = TRUE, na.string = "?")
nrow(data)
data <- data[grep("(^Date)|(^[1|2]/2/2007)",data$Date),]
data <- read.table("~/household_power_consumption.txt", sep = ";", header = TRUE, na.string = "?")
data1 <- data[grep("(^Date)|(^[1|2]/2/2007)",data$Date),]
data1 <- data[grep("(^Date)|(^[1|2]/2/2007)",data$Date),]
source('~/plot1.R')
data1
head(data1)
source('~/plot1.R')
head (data)
source('~/plot1.R')
head(data)
head(data1)
head(data2)
source('~/plot1.R')
head(data2)
source('~/plot1.R')
source('~/plot1.R')
head(data2)
source('~/plot1.R')
source('~/plot1.R')
rname
source('~/plot1.R')
source('~/plot1.R')
rname
nrows(rname)
nrow(rname)
source('~/plot1.R')
source('~/plot1.R')
rname
class(rname)
source('~/plot1.R')
class(rname)
source('~/plot1.R')
source('~/plot1.R')
rname
unlist(rname)
p<-unlist(rname)
p
source('~/plot1.R')
source('~/plot1.R')
data1
source('~/plot1.R')
data1
source('~/plot1.R')
source('~/plot1.R')
cname
source('~/plot1.R')
source('~/plot1.R')
cname
class(cname)
source('~/plot1.R')
class(cname)
source('~/plot1.R')
class(cname)
source('~/plot1.R')
head(data2)
cname
source('~/plot1.R')
source('~/plot1.R')
head(data2)
x<-strptime(paste(Data$Date, Data$Time), "%d/%m/%Y %H:%M:%S");
y<-Data$Global_active_power
x<-strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S");
y<-data$Global_active_power
source('~/plot1.R')
x<-strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S");
y<-data$Global_active_power
plot(x,y,typ='l', main="", xlab="", ylab="Global Active Power (kilowatts)")
hist(Data$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)");
hist(data$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)");
?strptime
?as.date
?as.dates
?as.Date
class(data$Date)
class(as.Date(data$Date, "%d/%m/%Y")
)
date$Date <- as.Date(data$Date, "%d/%m/%Y")
data$Date <- as.Date(data$Date, "%d/%m/%Y")
class(data$Date)
head(data)
class(data$Time)
?strptime
data$Time <- strptime(data$Time, "%H:%M:%S")
class(data$Time)
data$Time
class(data$Time)
head(data)
head(data$Time)
source('~/plot1.R')
head(data)
data[,-2]
head(data[,-2])
source('~/plot1.R')
source('~/plot1.R')
source('~/plot1.R')
?hist
source('~/plot1.R')
?dev.copy
source('~/plot1.R')
source('~/plot1.R')
source('~/plot1.R')
source('~/plot1.R')
source('~/plot2.R')
source('~/plot2.R')
source('~/plot2.R')
?plot
source('~/plot2.R')
source('~/plot2.R')
source('~/plot2.R')
head(data)
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
?pch
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
?ylim
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
?legend
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
length(legend)-1
length(legend)
plot(data$Date,y,type="n", main="", xlab = "", ylab="Energy sub metering",ylim =c(0,38))
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot3.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot4.R')
source('~/plot3.R')
source('~/plot3.R')
?Sys.setlocale
install.packages("UsingR")
install.packages("UsingR")
install.packages("UsingR")
setwd("~/RepData_PeerAssessment1")
data <- read.csv(unz("activity.zip","activity.csv"))
mean(data$steps)
steps <- data$steps
filter <- !is.na(steps)
filter_steps <- steps[filter]
filter_steps
filter
filter_steps
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
summrary(steps)
summary(steps)
source('~/RepData_PeerAssessment1/test.R')
steps
dates
head(data)
dates
source('~/RepData_PeerAssessment1/test.R')
total_steps
date
total_steps
head(date)
source('~/RepData_PeerAssessment1/test.R')
total_steps
level(date)
?as.factor
source('~/RepData_PeerAssessment1/test.R')
total_steps
date
is.factor(date)
summary(date)
summary(date)
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
summary(date)
date
source('~/RepData_PeerAssessment1/test.R')
date
date
steps
total_steps
source('~/RepData_PeerAssessment1/test.R')
total_steps
class(total_steps)
summary(total_steps)
str(total_steps)
head(total_steps)
mean(total_steps)
source('~/RepData_PeerAssessment1/test.R')
mean
mean_steps
median_steps
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
str(total_steps)
qplot(total_steps)
library(ggplot2)
qplot(total_steps)
qplot(total_steps, binwidth = 3)
qplot(total_steps, binwidth = 10)
qplot(total_steps, binwidth = 100)
qplot(total_steps, binwidth = 1000)
qplot(total_steps, binwidth = 500)
qplot(total_steps)
max(total_steps)
qplot(total_steps, binwidth = 21194/30)
qplot(total_steps, binwidth = 500)
qplot(total_steps, binwidth = 700)
?qplot
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
qplot(total_steps, main = "total number of steps taken per day", binwidth = 700)
qplot(total_steps, main = "total number of steps taken per day", binwidth = 700,fill = total_steps)
qplot(total_steps, main = "total number of steps taken per day", binwidth = 700)
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
qplot(total_steps, main = "total number of steps taken per day", binwidth = 700)
source('~/RepData_PeerAssessment1/test.R')
mean_steps
sum(is.na(steps))
sum(is.na(data$steps))
interval_factor <- factor(interval)
interval_factor <- factor(data$interval)
interval_factor
levels <- nlevels(interval_factor)
levels
?nlevels
factor(interval)[1:levels]
factor(data$interval)[1:levels]
average_steps <- tapply(steps, factor(data$interval), FUN = mean, na.rm = TRUE)
average_steps <- tapply(data$steps, factor(data$interval), FUN = mean, na.rm = TRUE)
average_steps
average_steps <- sapply(average_steps, simplify = array, round, 2)
average_steps
average_steps <- tapply(data$steps, factor(data$interval), FUN = mean, na.rm = TRUE)
class(average_steps)
library(lattice)
?xyplot
class(interval_factor)
class(average_steps)
as.numeric(average_steps)
qplot(interval_factor,as.numeric(average_steps), main = "Average Daily Activity Pattern")
qplot(interval_factor,as.numeric(average_steps), main = "Average Daily Activity Pattern")
# create a data frame of average steps and time interval
df_steps_interval <- data.frame(interval_factor, average_steps)
# sort df to get the row with the maximum amount of average steps
df_steps_interval <- df_steps_interval[order(df_steps_interval$average_steps,
decreasing = TRUE),]
# the first row contains the relevant time interval
time_interval_max <- df_steps_interval$interval_factor[1]
# convert the factor to a character and then to numeric
time_interval_max <- as.numeric(as.character(time_interval_max))
df_steps_interval <- data.frame(interval_factor, average_steps)
interval_factor <- factor(data$interval)
levels <- nlevels(interval_factor)
interval_factor <- factor(data$interval)[1:levels]
df_steps_interval <- data.frame(interval_factor, average_steps)
df_steps_interval
which(max(average_steps)
)
order(average_steps)
order(average_steps,decreasing = TRUE)
?order
x <- c(5:1, 6:8, 12:9)
order(x)
x
x[order(x)]
time_interval_max<- order(average_steps, decreasing = TRUE),][1]
time_interval_max<- order(average_steps, decreasing = TRUE)][1]
time_interval_max<- order(average_steps, decreasing = TRUE)[1]
time_interval_max
time_interval_max<- interval_factor[order(average_steps, decreasing = TRUE)[1]]
time_interval_max
time_interval_max<- interval_factor[order(average_steps, decreasing = TRUE)][1]
time_interval_max
steps.date <- aggregate(steps ~ date, data = Data, FUN = sum)
barplot(steps.date$steps, names.arg = steps.date$date, xlab = "Date", ylab = "# of Steps")
steps.date <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(steps.date$steps, names.arg = steps.date$date, xlab = "Date", ylab = "# of Steps")
head(step.date)
head(steps.date)
data
steps.date
class(steps.date)
?barplot
?hist
barplot(steps.date$steps, xlab = "Date", ylab = "# of Steps")
qplot(steps.date$date, steps.date$steps, main = "Total Number of Steps Taken per Day", binwidth = 700)
qplot(steps.date$date, data = steps.date, main = "Total Number of Steps Taken per Day", binwidth = 700)
qplot(steps.date$date, data = steps.date, main = "Total Number of Steps Taken per Day")
qplot(steps.date$date,  main = "Total Number of Steps Taken per Day")
qplot(steps.date$date, steps.date$steps, data = steps.date, main = "Total Number of Steps Taken per Day", binwidth = 700)
qplot(steps.date$date, steps.date$steps, data = steps.date, main = "Total Number of Steps Taken per Day")
qplot(steps.date$date, steps.date$steps, data = steps.date, main = "Total Number of Steps Taken per Day",fill=steps.date$steps)
qplot(steps.date$date, steps.date$steps, data = steps.date, main = "Total Number of Steps Taken per Day",fill=steps.date$date)
steps.date
class(steps.date)
data2 <- merge(data, steps.date, by="date", suffixes=c("",".y"))
data2
head(data2)
?merge
data2 <- merge(data, steps.date, by="date")
data2
head(data2)
data2 <- merge(data, steps.date, by="date", suffixes=c("",".y"))
head(data2)
?col.name
?col.names
?colnames
source('~/.active-rstudio-document')
myData
source('~/RepData_PeerAssessment1/test.R')
setwd("~/RepData_PeerAssessment1")
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
myData
source('~/RepData_PeerAssessment1/test.R')
head(myData)
nas
class(myData$steps)
class(data2)
class(nas)
source('~/RepData_PeerAssessment1/test.R')
head(myData)
nas
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
nas
source('~/RepData_PeerAssessment1/test.R')
head(myData2,1000)
head(nas,1000)
class(data$steps)
class(data2$steps)
class(data2)
class(data)
class(data$steps)
is.na(data$steps)
is.na(data$steps)
is.na(data2$steps)
class(data2$steps)
class(data$steps)
head(data2)
head(data2)
is.na(myData[,])
source('~/RepData_PeerAssessment1/test.R')
nas
class(myData)
class(myData2)
class(myData2$steps)
class(myData$steps)
is.na(myData$steps)
source('~/RepData_PeerAssessment1/test.R')
nas
source('~/RepData_PeerAssessment1/test.R')
nas
head(myData2,1000)
source('~/RepData_PeerAssessment1/test.R')
head(myData2,1000)
steps.date
weekdays(as.Date(data2$date))
source('~/RepData_PeerAssessment1/test.R')
weekdays(as.Date(MyData2$date))
source('~/RepData_PeerAssessment1/test.R')
source('~/RepData_PeerAssessment1/test.R')
weekdays(as.Date(myData2$date))
?aggregate
steps ~ interval
steps_interval <- aggregate(steps ~ interval, data=data, FUN=mean)
?aggregate
source('~/Getting and Cleaning Data Course Project/run_analysis.R')
tidy_data
head(data_all)
head(tidy_data)
nrows(tidy_data)
nrow(tidy_data)
nrow(data_all)
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
head(steps_interval)
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
source('~/RepData_PeerAssessment1-1/test.R')
head(steps_interval)
head(steps_interval2)
class(data_all$subject)
class(data_all$activity)
class(data_all)
class(data$interval)
class(data$steps)
steps_interval2
data
data <- read.csv(unz("activity.zip","activity.csv"))
data
headdata
head(data)
source('~/RepData_PeerAssessment1-1/test.R')
data2
head(date2)
head(data2)
data2$steps_date
data2$steps.x
?merge
source('~/RepData_PeerAssessment1-1/test.R')
head(data2)
?Sys.setlocale
Sys.getlocale()
